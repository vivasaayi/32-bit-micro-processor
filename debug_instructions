#! /opt/homebrew/Cellar/icarus-verilog/12.0/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/system.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/va_math.vpi";
S_0x132e08080 .scope module, "debug_instructions" "debug_instructions" 2 3;
 .timescale -9 -12;
    .scope S_0x132e08080;
T_0 ;
    %vpi_call 2 7 "$display", "=== Analyzing assembler-generated hex file ===" {0 0 0};
    %vpi_call 2 12 "$display", "Instruction Analysis:" {0 0 0};
    %vpi_call 2 13 "$display", "0x32 0x0A - Expected: LOADI R0, #10" {0 0 0};
    %vpi_call 2 14 "$display", "0x32 0x05 - Expected: LOADI R1, #5" {0 0 0};
    %vpi_call 2 15 "$display", "0x00      - Expected: ADD R0, R1" {0 0 0};
    %vpi_call 2 16 "$display", "0x32 0xFF - Expected: LOADI R2, #0xFF" {0 0 0};
    %vpi_call 2 17 "$display", "0x32 0x0F - Expected: LOADI R3, #0x0F" {0 0 0};
    %vpi_call 2 18 "$display", "0x10      - Expected: AND R2, R3" {0 0 0};
    %vpi_call 2 19 "$display", "0x32 0x14 - Expected: LOADI R4, #20" {0 0 0};
    %vpi_call 2 20 "$display", "0x32 0x08 - Expected: LOADI R5, #8" {0 0 0};
    %vpi_call 2 21 "$display", "0x1A      - Expected: SUB R4, R5" {0 0 0};
    %vpi_call 2 22 "$display", "0x80      - Expected: CMP R0, R1" {0 0 0};
    %vpi_call 2 23 "$display", "0x44      - Expected: JGE end" {0 0 0};
    %vpi_call 2 24 "$display", "0x15 0x80 - Expected: JGE address" {0 0 0};
    %vpi_call 2 25 "$display", "0x32 0x2A - Expected: LOADI R7, #42" {0 0 0};
    %vpi_call 2 26 "$display", "0x64      - Expected: HALT" {0 0 0};
    %vpi_call 2 28 "$display", "=== CPU Expected Instruction Format ===" {0 0 0};
    %vpi_call 2 29 "$display", "Based on control_unit.v:" {0 0 0};
    %vpi_call 2 30 "$display", "LOADI: opcode=4'h4, sub=2'b10, reg=3'b[reg] => 0100[reg]10 = 0x4[reg]2" {0 0 0};
    %vpi_call 2 31 "$display", "ADD:   opcode=4'h0, reg1, reg2 => 0000[reg1][reg2]" {0 0 0};
    %vpi_call 2 32 "$display", "AND:   opcode=4'h2, sub=2'b00 => 0010[reg1][reg2]00" {0 0 0};
    %vpi_call 2 33 "$display", "SUB:   opcode=4'h1, sub=2'b00 => 0001[reg1][reg2]00" {0 0 0};
    %vpi_call 2 34 "$display", "CMP:   opcode=4'h8 => 1000[reg1][reg2]" {0 0 0};
    %vpi_call 2 35 "$display", "JGE:   opcode=4'h5, sub=3'b100 => 01010100" {0 0 0};
    %vpi_call 2 36 "$display", "HALT:  opcode=4'h7, instr=8'h64 => 01100100" {0 0 0};
    %vpi_call 2 38 "$display", "=== Instruction Mismatch Found ===" {0 0 0};
    %vpi_call 2 39 "$display", "The assembler is generating different opcodes than CPU expects!" {0 0 0};
    %vpi_call 2 40 "$display", "Need to check assembler instruction encoding." {0 0 0};
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "debug_instructions.v";
