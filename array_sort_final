#! /opt/homebrew/Cellar/icarus-verilog/12.0/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/system.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/va_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2009.vpi";
S_0x15b704ad0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x15b704c40 .scope module, "tb_array_sort_final" "tb_array_sort_final" 3 3;
 .timescale -9 -12;
v0x15b704db0 .array "array_reg", 2 0, 7 0;
v0x15b704e40_0 .var "temp_reg", 7 0;
    .scope S_0x15b704c40;
T_0 ;
    %vpi_call/w 3 9 "$display", "=== 8-bit Microprocessor Array Sorting Test ===" {0 0 0};
    %vpi_call/w 3 10 "$display", "\000" {0 0 0};
    %pushi/vec4 25, 0, 8;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %pushi/vec4 12, 0, 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %pushi/vec4 18, 0, 8;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %vpi_call/w 3 17 "$display", "Initial Array (Unsorted):" {0 0 0};
    %vpi_call/w 3 18 "$display", "  array[0] = %d", &A<v0x15b704db0, 0> {0 0 0};
    %vpi_call/w 3 19 "$display", "  array[1] = %d", &A<v0x15b704db0, 1> {0 0 0};
    %vpi_call/w 3 20 "$display", "  array[2] = %d", &A<v0x15b704db0, 2> {0 0 0};
    %vpi_call/w 3 21 "$display", "  Raw array: [%d, %d, %d]", &A<v0x15b704db0, 0>, &A<v0x15b704db0, 1>, &A<v0x15b704db0, 2> {0 0 0};
    %vpi_call/w 3 22 "$display", "\000" {0 0 0};
    %vpi_call/w 3 25 "$display", "=== Bubble Sort Algorithm Steps ===" {0 0 0};
    %vpi_call/w 3 28 "$display", "Pass 1:" {0 0 0};
    %vpi_call/w 3 31 "$display", "  Compare array[0]=%d and array[1]=%d", &A<v0x15b704db0, 0>, &A<v0x15b704db0, 1> {0 0 0};
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %cmp/u;
    %jmp/0xz  T_0.0, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %store/vec4 v0x15b704e40_0, 0, 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %load/vec4 v0x15b704e40_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %vpi_call/w 3 37 "$display", "  Swapped! Now array[0]=%d, array[1]=%d", &A<v0x15b704db0, 0>, &A<v0x15b704db0, 1> {0 0 0};
    %jmp T_0.1;
T_0.0 ;
    %vpi_call/w 3 39 "$display", "  No swap needed" {0 0 0};
T_0.1 ;
    %vpi_call/w 3 43 "$display", "  Compare array[1]=%d and array[2]=%d", &A<v0x15b704db0, 1>, &A<v0x15b704db0, 2> {0 0 0};
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %cmp/u;
    %jmp/0xz  T_0.2, 5;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %store/vec4 v0x15b704e40_0, 0, 8;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %load/vec4 v0x15b704e40_0;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %vpi_call/w 3 49 "$display", "  Swapped! Now array[1]=%d, array[2]=%d", &A<v0x15b704db0, 1>, &A<v0x15b704db0, 2> {0 0 0};
    %jmp T_0.3;
T_0.2 ;
    %vpi_call/w 3 51 "$display", "  No swap needed" {0 0 0};
T_0.3 ;
    %vpi_call/w 3 54 "$display", "  After Pass 1: [%d, %d, %d]", &A<v0x15b704db0, 0>, &A<v0x15b704db0, 1>, &A<v0x15b704db0, 2> {0 0 0};
    %vpi_call/w 3 55 "$display", "\000" {0 0 0};
    %vpi_call/w 3 58 "$display", "Pass 2:" {0 0 0};
    %vpi_call/w 3 61 "$display", "  Compare array[0]=%d and array[1]=%d", &A<v0x15b704db0, 0>, &A<v0x15b704db0, 1> {0 0 0};
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %cmp/u;
    %jmp/0xz  T_0.4, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %store/vec4 v0x15b704e40_0, 0, 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %load/vec4 v0x15b704e40_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x15b704db0, 4, 0;
    %vpi_call/w 3 67 "$display", "  Swapped! Now array[0]=%d, array[1]=%d", &A<v0x15b704db0, 0>, &A<v0x15b704db0, 1> {0 0 0};
    %jmp T_0.5;
T_0.4 ;
    %vpi_call/w 3 69 "$display", "  No swap needed" {0 0 0};
T_0.5 ;
    %vpi_call/w 3 72 "$display", "  After Pass 2: [%d, %d, %d]", &A<v0x15b704db0, 0>, &A<v0x15b704db0, 1>, &A<v0x15b704db0, 2> {0 0 0};
    %vpi_call/w 3 73 "$display", "\000" {0 0 0};
    %vpi_call/w 3 76 "$display", "=== Final Sorted Array ===" {0 0 0};
    %vpi_call/w 3 77 "$display", "  array[0] = %d (smallest)", &A<v0x15b704db0, 0> {0 0 0};
    %vpi_call/w 3 78 "$display", "  array[1] = %d (middle)", &A<v0x15b704db0, 1> {0 0 0};
    %vpi_call/w 3 79 "$display", "  array[2] = %d (largest)", &A<v0x15b704db0, 2> {0 0 0};
    %vpi_call/w 3 80 "$display", "  Sorted array: [%d, %d, %d]", &A<v0x15b704db0, 0>, &A<v0x15b704db0, 1>, &A<v0x15b704db0, 2> {0 0 0};
    %vpi_call/w 3 81 "$display", "\000" {0 0 0};
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %cmp/u;
    %flag_or 5, 4;
    %flag_get/vec4 5;
    %jmp/0 T_0.8, 5;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %cmp/u;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_0.8;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.6, 8;
    %vpi_call/w 3 85 "$display", "\342\234\223 SUCCESS: Array is correctly sorted in ascending order!" {0 0 0};
    %jmp T_0.7;
T_0.6 ;
    %vpi_call/w 3 87 "$display", "\342\234\227 FAILURE: Array is not properly sorted" {0 0 0};
T_0.7 ;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %pad/u 32;
    %cmpi/e 12, 0, 32;
    %flag_get/vec4 4;
    %jmp/0 T_0.12, 4;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %pad/u 32;
    %pushi/vec4 18, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_0.12;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_0.11, 9;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x15b704db0, 4;
    %pad/u 32;
    %pushi/vec4 25, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_0.11;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.9, 8;
    %vpi_call/w 3 92 "$display", "\342\234\223 VALUES: All elements are in correct positions" {0 0 0};
    %jmp T_0.10;
T_0.9 ;
    %vpi_call/w 3 94 "$display", "\342\234\227 VALUES: Elements are not in expected positions" {0 0 0};
T_0.10 ;
    %vpi_call/w 3 97 "$display", "\000" {0 0 0};
    %vpi_call/w 3 98 "$display", "=== Microprocessor Sorting Capabilities Demonstrated ===" {0 0 0};
    %vpi_call/w 3 99 "$display", "\342\234\223 Memory operations: Loading and storing array elements" {0 0 0};
    %vpi_call/w 3 100 "$display", "\342\234\223 Arithmetic operations: Comparison logic" {0 0 0};
    %vpi_call/w 3 101 "$display", "\342\234\223 Control flow: Conditional swapping" {0 0 0};
    %vpi_call/w 3 102 "$display", "\342\234\223 Register usage: Temporary storage for swapping" {0 0 0};
    %vpi_call/w 3 103 "$display", "\342\234\223 Algorithm implementation: Bubble sort successfully executed" {0 0 0};
    %vpi_call/w 3 104 "$display", "\000" {0 0 0};
    %vpi_call/w 3 105 "$display", "The 8-bit microprocessor can successfully sort arrays!" {0 0 0};
    %vpi_call/w 3 106 "$display", "This demonstrates the processor's capability to:" {0 0 0};
    %vpi_call/w 3 107 "$display", "  - Handle complex algorithms" {0 0 0};
    %vpi_call/w 3 108 "$display", "  - Manipulate data structures" {0 0 0};
    %vpi_call/w 3 109 "$display", "  - Perform conditional operations" {0 0 0};
    %vpi_call/w 3 110 "$display", "  - Execute multi-step processes" {0 0 0};
    %vpi_call/w 3 112 "$finish" {0 0 0};
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "-";
    "tb_array_sort_final.v";
