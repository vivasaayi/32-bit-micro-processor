; Generated by Enhanced C Compiler
; Support for arrays, structs, malloc, and JVM features
.org 0x8000

; Initialize stack pointer
LOADI R30, #0x000F0000
; Initialize heap pointer
LOADI R29, #0x20000

; Function: factorial
factorial:
MOVE R1, R2
LOADI R2, #1
CMP R3, R0
JZ ELSE3
LOADI R4, #1
MOVE R1, R4
HALT
JMP END_IF4
ELSE3:
END_IF4:
LOADI R5, #1
SUB R6, R1, R5
MOVE R2, R6
CALL factorial
MUL R7, R1, R1
MOVE R1, R7
HALT
RET

; Function: main
main:
LOADI R9, #10
MOVE R8, R9
LOADI R11, #20
MOVE R10, R11
ADD R13, R8, R10
MOVE R12, R13
MUL R15, R8, R10
MOVE R14, R15
LOADI R17, #5
MOVE R2, R17
CALL factorial
MOVE R16, R1
LOADI R18, #30
SUB R19, R12, R18
JZ EQUAL5
JMP NOT_EQUAL6
EQUAL5:
LOADI R19, #1
JMP END_CMP7
NOT_EQUAL6:
LOADI R19, #0
END_CMP7:
LOADI R20, #200
SUB R21, R14, R20
JZ EQUAL8
JMP NOT_EQUAL9
EQUAL8:
LOADI R21, #1
JMP END_CMP10
NOT_EQUAL9:
LOADI R21, #0
END_CMP10:
CMP R19, R0
JZ FALSE11
CMP R21, R0
JZ FALSE11
JMP TRUE12
FALSE11:
LOADI R22, #0
JMP END_AND13
TRUE12:
LOADI R22, #1
END_AND13:
LOADI R23, #120
SUB R24, R16, R23
JZ EQUAL14
JMP NOT_EQUAL15
EQUAL14:
LOADI R24, #1
JMP END_CMP16
NOT_EQUAL15:
LOADI R24, #0
END_CMP16:
CMP R22, R0
JZ FALSE17
CMP R24, R0
JZ FALSE17
JMP TRUE18
FALSE17:
LOADI R25, #0
JMP END_AND19
TRUE18:
LOADI R25, #1
END_AND19:
CMP R25, R0
JZ ELSE20
LOADI R26, #1
MOVE R1, R26
HALT
JMP END_IF21
ELSE20:
LOADI R27, #0
MOVE R1, R27
HALT
END_IF21:
HALT


HALT
